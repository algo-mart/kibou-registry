name: Branch Naming Check

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  check-branch-name:
    runs-on: ubuntu-latest
    steps:
      - name: Get branch name from PR
        id: pr_branch
        uses: actions/github-script@v5
        with:
          script: |
            const pr = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number,
            });
            return pr.data.head.ref;
          result-encoding: string

      - name: Check If Admin
        id: check_admin
        uses: actions/github-script@v5
        with:
          script: |
            const current_user = (process.env.GITHUB_ACTOR).toLowerCase();
            const admins = ["Realwale", "olusolaa", "toluwase1"];  // Add the list of admin usernames here
            const is_admin = admins.includes(current_user);
            console.log(`Current user: ${current_user}`);
            console.log(`Is admin: ${is_admin}`);
            return is_admin.toString();
          result-encoding: string

      - name: Check Branch Name
        if: ${{ steps.check_admin.outputs.result != 'true' }}
        run: |
          branch_name="${{ steps.pr_branch.outputs.result }}"
          expected_prefix="$(echo $GITHUB_ACTOR | tr '[:upper:]' '[:lower:]')/"
          actual_prefix="${branch_name%%/*}/"
          if [[ ! $branch_name =~ ^$expected_prefix ]]; then
            echo "Branch name: $branch_name"
            echo "Expected prefix: $expected_prefix"
            echo "Branch name does not follow the expected naming convention."
            echo "Actual prefix: $actual_prefix"
            echo "Expected prefix: $expected_prefix[issue-name]"
            exit 1
          fi

      - name: Check Issue Match
        if: ${{ steps.check_prefix.outcome != 'failure' }}
        uses: actions/github-script@v5
        with:
          script: |
            const branch_name = "${{ steps.pr_branch.outputs.result }}";
            const user_prefix = "${{ steps.check_prefix.outputs.result }}";
            const branch_suffix = branch_name.substring(user_prefix.length);
            const issue_number = branch_suffix.split('-')[0];
            let issue_exists = false;
            
            const issue = await github.rest.issues.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: issue_number,
            });
            
            if (issue.data && issue.data.title) {
              const expected_branch_suffix = `${issue_number}-${issue.data.title.replace(/\s+/g, '-').toLowerCase()}`;
              if (branch_suffix.toLowerCase() === expected_branch_suffix) {
                issue_exists = true;
              }
            }
            
            if (!issue_exists) {
              console.log(`Branch name: ${branch_name}`);
              console.log(`Expected branch suffix: ${issue_number}-${expected_issue_title.toLowerCase().replace(/\s+/g, '-')}`);
              console.log("Your branch does not target any open issue.");
              core.setFailed("Issue match check failed.");
            }

          result-encoding: string
